/*******************************************************************************
 * This file is part of the EEG-database project
 * 
 *   ==========================================
 *  
 *   Copyright (C) 2013 by University of West Bohemia (http://www.zcu.cz/en/)
 *  
 *  ***********************************************************************************************************************
 *  
 *   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 *   the License. You may obtain a copy of the License at
 *  
 *       http://www.apache.org/licenses/LICENSE-2.0
 *  
 *   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 *   an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *   specific language governing permissions and limitations under the License.
 *  
 *  ***********************************************************************************************************************
 *  
 *   Digitization.java, 2013/10/02 00:01 Jakub Rinkes
 ******************************************************************************/
package cz.zcu.kiv.eegdatabase.data.pojo;

import javax.persistence.*;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.GenericGenerator;

/**
 * Digitization generated by hbm2java
 */
@Entity
@Table(name = "DIGITIZATION")
public class Digitization implements Serializable {

	private int digitizationId;
	private float gain;
	private String filter;
	private float samplingRate;
	private Set<Experiment> experiments = new HashSet<Experiment>(0);
	private Set<ResearchGroup> researchGroups = new HashSet<ResearchGroup>(0);

	public Digitization() {
	}

	public Digitization(float gain, String filter, float samplingRate,
			Set<Experiment> experiments, Set<ResearchGroup> researchGroups) {
		this.gain = gain;
		this.filter = filter;
		this.samplingRate = samplingRate;
		this.experiments = experiments;
		this.researchGroups = researchGroups;
	}

	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "DIGITIZATION_ID", nullable = false, precision = 22, scale = 0)
	public int getDigitizationId() {
		return this.digitizationId;
	}

	public void setDigitizationId(int digitizationId) {
		this.digitizationId = digitizationId;
	}

	@Column(name = "GAIN", precision = 22, scale = 0)
	public float getGain() {
		return this.gain;
	}

	public void setGain(float gain) {
		this.gain = gain;
	}

	@Column(name = "FILTER")
	public String getFilter() {
		return this.filter;
	}

	public void setFilter(String filter) {
		this.filter = filter;
	}

	@Column(name = "SAMPLING_RATE", precision = 22, scale = 0)
	public float getSamplingRate() {
		return this.samplingRate;
	}

	public void setSamplingRate(float samplingRate) {
		this.samplingRate = samplingRate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "digitization")
	public Set<Experiment> getExperiments() {
		return this.experiments;
	}

	public void setExperiments(Set<Experiment> experiments) {
		this.experiments = experiments;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "DIGITIZATION_GROUP_REL", joinColumns = { @JoinColumn(name = "DIGITIZATION_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "RESEARCH_GROUP_ID", nullable = false, updatable = false) })
	public Set<ResearchGroup> getResearchGroups() {
		return this.researchGroups;
	}

	public void setResearchGroups(Set<ResearchGroup> researchGroups) {
		this.researchGroups = researchGroups;
	}

}
