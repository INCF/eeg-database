/*******************************************************************************
 * This file is part of the EEG-database project
 * 
 *   ==========================================
 *  
 *   Copyright (C) 2013 by University of West Bohemia (http://www.zcu.cz/en/)
 *  
 *  ***********************************************************************************************************************
 *  
 *   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 *   the License. You may obtain a copy of the License at
 *  
 *       http://www.apache.org/licenses/LICENSE-2.0
 *  
 *   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 *   an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *   specific language governing permissions and limitations under the License.
 *  
 *  ***********************************************************************************************************************
 *  
 *   Disease.java, 2013/10/02 00:01 Jakub Rinkes
 ******************************************************************************/
package cz.zcu.kiv.eegdatabase.data.pojo;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

import cz.zcu.kiv.eegdatabase.data.annotation.SolrField;
import cz.zcu.kiv.eegdatabase.data.annotation.SolrId;
import cz.zcu.kiv.eegdatabase.logic.indexing.IndexField;
import cz.zcu.kiv.eegdatabase.wui.ui.experiments.converters.IAutoCompletable;

import org.hibernate.annotations.GenericGenerator;

/**
 * Disease generated by hbm2java
 */
@Entity
@Table(name = "DISEASE")
public class Disease implements java.io.Serializable, IAutoCompletable {

	@SolrId
	private int diseaseId;
	@SolrField(name = IndexField.TITLE)
	private String title;
	@SolrField(name = IndexField.TEXT)
	private String description;
	private Set<Experiment> experiments = new HashSet<Experiment>(0);
	private Set<ResearchGroup> researchGroups = new HashSet<ResearchGroup>(0);

	public Disease() {
	}

	public Disease(String title, String description,
					Set<Experiment> experiments, Set<ResearchGroup> researchGroups) {
		this.title = title;
		this.description = description;
		this.experiments = experiments;
		this.researchGroups = researchGroups;
	}

	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "DISEASE_ID", nullable = false, precision = 22, scale = 0)
	public int getDiseaseId() {
		return this.diseaseId;
	}

	public void setDiseaseId(int diseaseId) {
		this.diseaseId = diseaseId;
	}

	@Column(name = "TITLE")
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "DISEASE_REL", joinColumns = {
		@JoinColumn(name = "DISEASE_ID", nullable = false, updatable = false)}, inverseJoinColumns = {
		@JoinColumn(name = "EXPERIMENT_ID", nullable = false, updatable = false)})
	public Set<Experiment> getExperiments() {
		return this.experiments;
	}

	public void setExperiments(Set<Experiment> experiments) {
		this.experiments = experiments;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "DISEASE_GROUP_REL", joinColumns = {
		@JoinColumn(name = "DISEASE_ID", nullable = false, updatable = false)}, inverseJoinColumns = {
		@JoinColumn(name = "RESEARCH_GROUP_ID", nullable = false, updatable = false)})
	public Set<ResearchGroup> getResearchGroups() {
		return this.researchGroups;
	}

	public void setResearchGroups(Set<ResearchGroup> researchGroups) {
		this.researchGroups = researchGroups;
	}

	@Override
	@Transient
	public String getAutoCompleteData() {
		return getTitle();
	}
}
