/*******************************************************************************
 * This file is part of the EEG-database project
 * 
 *   ==========================================
 *  
 *   Copyright (C) 2013 by University of West Bohemia (http://www.zcu.cz/en/)
 *  
 *  ***********************************************************************************************************************
 *  
 *   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 *   the License. You may obtain a copy of the License at
 *  
 *       http://www.apache.org/licenses/LICENSE-2.0
 *  
 *   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 *   an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *   specific language governing permissions and limitations under the License.
 *  
 *  ***********************************************************************************************************************
 *  
 *   DataFile.java, 2013/10/02 00:01 Jakub Rinkes
 ******************************************************************************/
package cz.zcu.kiv.eegdatabase.data.pojo;
// Generated 19.1.2010 23:18:53 by Hibernate Tools 3.2.1.GA

import cz.zcu.kiv.eegdatabase.data.annotation.SolrField;
import cz.zcu.kiv.eegdatabase.data.annotation.SolrId;
import cz.zcu.kiv.eegdatabase.logic.indexing.IndexField;

import javax.persistence.*;
import java.io.Serializable;
import java.sql.Blob;
import java.util.HashSet;
import java.util.Set;

/**
 * DataFile generated by hbm2java
 */
@Entity
//@Indexed
@javax.persistence.Table(name="DATA_FILE")
public class DataFile implements Serializable {

    //@DocumentId
    @SolrId
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "DATA_FILE_ID")
    private int dataFileId;
    @ManyToOne
    @JoinColumn(name = "EXPERIMENT_ID")
    private Experiment experiment;
    @SolrField(name = IndexField.TEXT)
    @Column(name = "DESCRIPTION")
    private String description;
    @Column(name = "FILE_CONTENT")
    @Lob
    private Blob fileContent;
    /*
    @Fields({
            @Field(index = Index.TOKENIZED), //same property indexed multiple times
            @Field(name = "mimetype")}) //use a different field name
    */
    @SolrField(name = IndexField.FILE_MIMETYPE)
    @Column(name = "MIMETYPE")
    private String mimetype;
    /*
    @Fields({
            @Field(index = Index.TOKENIZED), //same property indexed multiple times
            @Field(name = "filename")}) //use a different field name
    */
    @SolrField(name = IndexField.NAME)
    @Column(name = "FILENAME")
    private String filename;
    @OneToMany(mappedBy = "dataFile")
    private Set<FileMetadataParamVal> fileMetadataParamVals = new HashSet<FileMetadataParamVal>(0);
    @OneToMany(mappedBy = "dataFile")
    private Set<History> histories = new HashSet<History>(0);
    @OneToMany(mappedBy = "descImg")
    private Set<ElectrodeConf> electrodeConfs = new HashSet<ElectrodeConf>(0);
    @ManyToOne
    @JoinColumn(name = "ANALYSIS_ID")
    private Analysis analysis;

    public DataFile() {
    }

    public DataFile(int dataFileId, Experiment experiment, String description, Blob fileContent, String mimetype, String filename) {
        this.dataFileId = dataFileId;
        this.experiment = experiment;
        this.description = description;
        this.fileContent = fileContent;
        this.mimetype = mimetype;
        this.filename = filename;
    }

    public DataFile(int dataFileId, Experiment experiment, String description, Blob fileContent, String mimetype, String filename, Set<FileMetadataParamVal> fileMetadataParamVals) {
        this.dataFileId = dataFileId;
        this.experiment = experiment;
        this.description = description;
        this.fileContent = fileContent;
        this.mimetype = mimetype;
        this.filename = filename;
        this.fileMetadataParamVals = fileMetadataParamVals;
    }

    public int getDataFileId() {
        return this.dataFileId;
    }

    public void setDataFileId(int dataFileId) {
        this.dataFileId = dataFileId;
    }

    public Experiment getExperiment() {
        return this.experiment;
    }

    public void setExperiment(Experiment experiment) {
        this.experiment = experiment;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Blob getFileContent() {
        return this.fileContent;
    }

    public void setFileContent(Blob fileContent) {
        this.fileContent = fileContent;
    }

    public String getMimetype() {
        return this.mimetype;
    }

    public void setMimetype(String mimetype) {
        this.mimetype = mimetype;
    }

    public String getFilename() {
        return this.filename;
    }

    public void setFilename(String filename) {
        this.filename = filename;
    }

    public Set<FileMetadataParamVal> getFileMetadataParamVals() {
        return this.fileMetadataParamVals;
    }

    public void setFileMetadataParamVals(Set<FileMetadataParamVal> fileMetadataParamVals) {
        this.fileMetadataParamVals = fileMetadataParamVals;
    }

    public Set<History> getHistories() {
        return histories;
    }

    public void setHistories(Set<History> histories) {
        this.histories = histories;
    }

    public Analysis getAnalysis() {
        return analysis;
    }

    public void setAnalysis(Analysis analysis) {
        this.analysis = analysis;
    }

    public Set<ElectrodeConf> getElectrodeConfs() {
        return electrodeConfs;
    }

    public void setElectrodeConfs(Set<ElectrodeConf> electrodeConfs) {
        this.electrodeConfs = electrodeConfs;
    }
}


